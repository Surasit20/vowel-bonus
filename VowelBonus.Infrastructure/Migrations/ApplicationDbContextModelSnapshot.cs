// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VowelBonus.Infrastructure.Data;

#nullable disable

namespace VowelBonus.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VowelBonus.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserId")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastLoginDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("LastLoginDate")
                        .HasColumnOrder(3);

                    b.Property<DateTimeOffset?>("LastLogoutDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("LastLogoutDate")
                        .HasColumnOrder(4);

                    b.Property<DateTimeOffset>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UserName")
                        .HasColumnOrder(2);

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("VowelBonus.Domain.Entities.VowelBonusScoreHistory", b =>
                {
                    b.Property<int>("VowelBonusScoreHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VowelBonusScoreHistoryId")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VowelBonusScoreHistoryId"));

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Point")
                        .HasColumnType("int")
                        .HasColumnName("Point")
                        .HasColumnOrder(4);

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId")
                        .HasColumnOrder(2);

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("Word")
                        .HasColumnOrder(3);

                    b.HasKey("VowelBonusScoreHistoryId");

                    b.HasIndex("UserId");

                    b.ToTable("VowelBonusScoreHistory");
                });

            modelBuilder.Entity("VowelBonus.Domain.Entities.VowelBonusScoreHistory", b =>
                {
                    b.HasOne("VowelBonus.Domain.Entities.User", "User")
                        .WithMany("VowelBonusScoreHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VowelBonus.Domain.Entities.User", b =>
                {
                    b.Navigation("VowelBonusScoreHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
